# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: en_US

services:
    # Default configuration for services in *this* file
    _defaults:
        # Automatically injects dependencies in your services
        autowire: true

        # Automatically registers your services as commands, event subscribers, etc.
        autoconfigure: true

        # Allows optimizing the container by removing unused services; this also means
        # fetching services directly from the container via $container->get() won't work
        public: false

    # Makes classes in src/ available to be used as services;
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{Entity,Migrations,Tests,Kernel.php}'

    # Controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    App\ChannelContext\CustomerBasedChannelContext:
        arguments: ['@sylius.context.customer', '@sylius.repository.channel']
        tags:
            - { name: sylius.context.channel, priority: 0 }

    App\Form\Type\WeightBasedShippingCalculatorConfiguration:
        tags:
            - { name: form.type }

    App\Shipping\Calculator\WeightBasedShippingCalculator:
        tags:
            -
                name: sylius.shipping_calculator
                label: Weight based calculator
                calculator: weight_type_rate
                form_type: App\Form\Type\ChannelAwareWeightBasedShippingCalculatorConfigurationType

    App\EventListener\ReviewAcceptedSender:
        arguments: ['@sylius.email_sender']
        tags:
            - { name: kernel.event_listener, event: sylius.product_review.post_update }

    App\Form\Type\StoreType:
        arguments:
            - '%app.model.store.class%'
            - ['sylius']
        tags:
            - { name: form.type, alias: App\Form\Type\StoreType }

    App\Form\Extension\ShippingMethodTypeExtension:
        tags:
            - { name: form.type_extension, class: Sylius\Bundle\ShippingBundle\Form\Type\ShippingMethodType }

    app.inject_form.shipping_method:
        class: Sylius\Bundle\UiBundle\Block\BlockEventListener
        arguments:
            - 'Admin\_injectedForm.html.twig'
        tags:
            - { name: kernel.event_listener, event: sonata.block.event.sylius.admin.shipping_method.update.form, method: onBlockEvent }
            - { name: kernel.event_listener, event: sonata.block.event.sylius.admin.shipping_method.create.form, method: onBlockEvent }

    app.inject_form.payment_method:
        class: Sylius\Bundle\UiBundle\Block\BlockEventListener
        arguments:
            - 'Admin\PaymentMethod\_injectedFeeForm.html.twig'
        tags:
            - { name: kernel.event_listener, event: sonata.block.event.sylius.admin.payment_method.update.form, method: onBlockEvent }
            - { name: kernel.event_listener, event: sonata.block.event.sylius.admin.payment_method.create.form, method: onBlockEvent }

    App\EventListener\AutomaticReviewApproval:
        arguments: ['@sm.factory', '@sylius.manager.product_review']
        tags:
            - { name: kernel.event_listener, event: sylius.product_review.post_create, method: __invoke }

    App\Checker\TrustedAuthorChecker:
        public: true

    App\Form\Type\SelectShippingAndPaymentType:
        arguments:
            - '%sylius.model.order.class%'
            - ['sylius']
        tags:
            - { name: form.type, alias: App\Form\Type\SelectShippingAndPaymentType }

    sylius.order_processing.order_adjustments_clearer:
        # Due to the issues with doubled registered order processors, the autoconfiguration has to be turned off
        autoconfigure: false
        class: 'Sylius\Component\Core\OrderProcessing\OrderAdjustmentsClearer'
        arguments:
            - [!php/const Sylius\Component\Core\Model\AdjustmentInterface::ORDER_ITEM_PROMOTION_ADJUSTMENT,
               !php/const Sylius\Component\Core\Model\AdjustmentInterface::ORDER_PROMOTION_ADJUSTMENT,
               !php/const Sylius\Component\Core\Model\AdjustmentInterface::ORDER_SHIPPING_PROMOTION_ADJUSTMENT,
               !php/const Sylius\Component\Core\Model\AdjustmentInterface::ORDER_UNIT_PROMOTION_ADJUSTMENT,
               !php/const Sylius\Component\Core\Model\AdjustmentInterface::SHIPPING_ADJUSTMENT,
               !php/const Sylius\Component\Core\Model\AdjustmentInterface::TAX_ADJUSTMENT,
               'payment']
        tags:
            - { name: sylius.order_processor, priority: 60 }


    App\OrderProcessing\PaymentFeeProcessor:
        autoconfigure: false
        tags:
            - { name: sylius.order_processor, priority: 25 }

    App\Promotion\RuleChecker\AmountOfOrdersInTimePeriod:
        arguments: ['@sylius.repository.order']
        tags:
            - { name: sylius.promotion_rule_checker, type: 'amount_of_orders_in_time', label: 'Amount of orders in time', form_type: App\Form\Type\AmountOfOrdersInTimeRuleCheckerConfigurationType }

    App\Promotion\Action\FreeGiftPromotionActionCommand:
        arguments: ['@sylius.factory.order_item', '@sylius.repository.product', '@sylius.order_item_quantity_modifier']
        tags:
            - { name: sylius.promotion_action, type: 'free_item', label: 'Free item', form_type: Symfony\Component\Form\Extension\Core\Type\FormType }
