sylius_shop:
    resource: "@SyliusShopBundle/Resources/config/routing.yml"
    prefix: /{_locale}
    requirements:
        _locale: ^[A-Za-z]{2,4}(_([A-Za-z]{4}|[0-9]{3}))?(_([A-Za-z]{2}|[0-9]{3}))?$

sylius_shop_payum:
    resource: "@SyliusShopBundle/Resources/config/routing/payum.yml"

sylius_shop_default_locale:
    path: /
    methods: [GET]
    defaults:
        _controller: sylius.controller.shop.locale_switch:switchAction


app_shop_checkout_shipment_and_payment:
    path: /{locale}/checkout/select-shipping-and-payment
    methods: [GET, PUT]
    defaults:
        _controller: sylius.controller.order:updateAction
        _sylius:
            event: shipment_and_payment
            flash: false
            redirect: sylius_shop_checkout_complete
            template: "Shop/Checkout/selectShippingAndPayment.html.twig"
            form:
                type: App\Form\Type\SelectShippingAndPaymentType
            repository:
                method: findCartForSelectingShipping
                arguments:
                    - "expr:service('sylius.context.cart').getCart().getId()"
            state_machine:
                graph: sylius_order_checkout
                transition: select_shipment_and_payment


sylius_shop_cart_save:
    path: /
    methods: [PUT, PATCH]
    defaults:
        _controller: sylius.controller.order:saveAction
        _sylius:
            event: recalculate_cart
            template: "@SyliusShop/Cart/summary.html.twig"
            redirect: sylius_shop_cart_summary
            form: Sylius\Bundle\OrderBundle\Form\Type\CartType
            flash: sylius.cart.save

sylius_shop_cart_item_remove:
    path: /{id}/remove
    methods: [DELETE]
    defaults:
        _controller: sylius.controller.order_item:removeAction
        _sylius:
            event: recalculate_cart
            flash: sylius.cart.remove_item
            redirect:
                route: sylius_shop_cart_summary
                parameters: {}

sylius_shop_partial_cart_add_item:
    path: /{_locale}/_partial/cart/add-item
    methods: [GET]
    defaults:
        _controller: sylius.controller.order_item:addAction
        _sylius:
            event: recalculate_cart
            template: $template
            factory:
                method: createForProduct
                arguments: [expr:notFoundOnNull(service('sylius.repository.product').find($productId))]
            form:
                type: Sylius\Bundle\CoreBundle\Form\Type\Order\AddToCartType
                options:
                    product: expr:notFoundOnNull(service('sylius.repository.product').find($productId))
            redirect:
                route: sylius_shop_cart_summary
                parameters: {}
